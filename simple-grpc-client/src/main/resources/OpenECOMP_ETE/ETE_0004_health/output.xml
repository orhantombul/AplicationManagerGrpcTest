<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180810 21:49:02.772" generator="Robot 3.0.4 (Python 2.7.12 on linux2)">
<suite source="/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE" id="s1" name="OpenECOMP ETE">
<suite source="/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot" id="s1-s1" name="Robot">
<suite source="/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/testsuites" id="s1-s1-s1" name="Testsuites">
<suite source="/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/testsuites/health-check.robot" id="s1-s1-s1-s1" name="Health-Check">
<test id="s1-s1-s1-s1-t1" name="Basic A&amp;AI Health Check">
<kw name="Run A&amp;AI Health Check" library="aai_interface">
<doc>Runs an A&amp;AI health check</doc>
<msg timestamp="20180810 21:49:03.391" level="TRACE">Arguments: [  ]</msg>
<kw name="Run A&amp;AI Get Request" library="aai_interface">
<doc>Runs an A&amp;AI get request</doc>
<arguments>
<arg>${AAI_HEALTH_PATH}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20180810 21:49:03.392" level="TRACE">Arguments: [ ${data_path}='/aai/util/echo?action=long' ]</msg>
<kw name="Disable Warnings" library="HTTPUtils">
<doc>Disable the cert warnings when creating sessions for A&amp;AI API Calls</doc>
<msg timestamp="20180810 21:49:03.393" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20180810 21:49:03.393" level="DEBUG">Test timeout 2 seconds active. 1.997 seconds left.</msg>
<msg timestamp="20180810 21:49:03.393" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20180810 21:49:03.393" starttime="20180810 21:49:03.393"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAI_USERNAME}</arg>
<arg>${GLOBAL_AAI_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20180810 21:49:03.394" level="TRACE">Arguments: [ b'AAI' | b'AAI' ]</msg>
<msg timestamp="20180810 21:49:03.394" level="DEBUG">Test timeout 2 seconds active. 1.995 seconds left.</msg>
<msg timestamp="20180810 21:49:03.394" level="TRACE">Return: [b'AAI', b'AAI']</msg>
<msg timestamp="20180810 21:49:03.395" level="INFO">${auth} = ['AAI', 'AAI']</msg>
<status status="PASS" endtime="20180810 21:49:03.395" starttime="20180810 21:49:03.394"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aai</arg>
<arg>${AAI_FRONTEND_ENDPOINT}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20180810 21:49:03.395" level="TRACE">Arguments: [ 'aai' | 'https://192.168.61.18:8443' | auth=[b'AAI', b'AAI'] ]</msg>
<msg timestamp="20180810 21:49:03.396" level="DEBUG">Test timeout 2 seconds active. 1.994 seconds left.</msg>
<msg timestamp="20180810 21:49:03.396" level="INFO">Creating Session using : alias=aai, url=https://192.168.61.18:8443, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fe781f64590&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20180810 21:49:03.396" level="DEBUG">Creating session: aai</msg>
<msg timestamp="20180810 21:49:03.396" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20180810 21:49:03.398" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fe781fec2d0&gt;</msg>
<msg timestamp="20180810 21:49:03.398" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fe781fec2d0&gt;</msg>
<status status="PASS" endtime="20180810 21:49:03.398" starttime="20180810 21:49:03.395"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20180810 21:49:03.399" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20180810 21:49:03.399" level="DEBUG">Test timeout 2 seconds active. 1.991 seconds left.</msg>
<msg timestamp="20180810 21:49:03.399" level="TRACE">Return: UUID('a66a63df-2ac8-4ed9-aa2e-ce7d85d0e949')</msg>
<msg timestamp="20180810 21:49:03.399" level="INFO">${uuid} = a66a63df-2ac8-4ed9-aa2e-ce7d85d0e949</msg>
<status status="PASS" endtime="20180810 21:49:03.399" starttime="20180810 21:49:03.399"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20180810 21:49:03.400" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20180810 21:49:03.402" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-a66a63df-2ac8-4ed9-aa2e-ce7d85d0e949'}</msg>
<msg timestamp="20180810 21:49:03.402" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-a66a63df-2ac8-4ed9-aa2e-ce7d85d0e949', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20180810 21:49:03.402" starttime="20180810 21:49:03.400"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>aai</arg>
<arg>${data_path}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20180810 21:49:03.403" level="TRACE">Arguments: [ 'aai' | '/aai/util/echo?action=long' | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-a66a63df-2ac8-4ed9-aa2e-ce7d85d0e949'} ]</msg>
<msg timestamp="20180810 21:49:03.403" level="DEBUG">Test timeout 2 seconds active. 1.987 seconds left.</msg>
<msg timestamp="20180810 21:49:03.404" level="DEBUG">Starting new HTTPS connection (1): 192.168.61.18</msg>
<msg timestamp="20180810 21:49:03.428" level="DEBUG">https://192.168.61.18:8443 "GET /aai/util/echo?action=long HTTP/1.1" 200 252</msg>
<msg timestamp="20180810 21:49:03.429" level="INFO">Get Request using : alias=aai, uri=/aai/util/echo?action=long, headers={u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-a66a63df-2ac8-4ed9-aa2e-ce7d85d0e949', u'X-FromAppId': u'robot-ete'} </msg>
<msg timestamp="20180810 21:49:03.429" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20180810 21:49:03.429" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180810 21:49:03.429" starttime="20180810 21:49:03.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Received response from aai ${resp.text}</arg>
</arguments>
<msg timestamp="20180810 21:49:03.431" level="TRACE">Arguments: [ 'Received response from aai {"responseMessages":{"responseMessage":[{"messageId":"INF0001","text":"Success X-FromAppId=%1 X-TransactionId=%2 (msg=%3) (rc=%4)","variables":{"variable":["robot-ete","24cacc50-8555-4820-b675-78c504bcf3ea","Successful health check:OK","0.0.0002"]}}]}}' ]</msg>
<msg timestamp="20180810 21:49:03.431" level="DEBUG">Test timeout 2 seconds active. 1.959 seconds left.</msg>
<msg timestamp="20180810 21:49:03.431" level="INFO">Received response from aai {"responseMessages":{"responseMessage":[{"messageId":"INF0001","text":"Success X-FromAppId=%1 X-TransactionId=%2 (msg=%3) (rc=%4)","variables":{"variable":["robot-ete","24cacc50-8555-4820-b675-78c504bcf3ea","Successful health check:OK","0.0.0002"]}}]}}</msg>
<msg timestamp="20180810 21:49:03.432" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20180810 21:49:03.432" starttime="20180810 21:49:03.430"></status>
</kw>
<msg timestamp="20180810 21:49:03.432" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20180810 21:49:03.432" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20180810 21:49:03.433" starttime="20180810 21:49:03.392"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20180810 21:49:03.434" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20180810 21:49:03.434" level="DEBUG">Test timeout 2 seconds active. 1.956 seconds left.</msg>
<msg timestamp="20180810 21:49:03.434" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20180810 21:49:03.434" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20180810 21:49:03.435" starttime="20180810 21:49:03.433"></status>
</kw>
<msg timestamp="20180810 21:49:03.435" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20180810 21:49:03.435" starttime="20180810 21:49:03.391"></status>
</kw>
<tags>
<tag>core</tag>
<tag>health</tag>
</tags>
<timeout value="2 seconds"></timeout>
<status status="PASS" endtime="20180810 21:49:03.435" critical="yes" starttime="20180810 21:49:03.389"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="Basic AAF Health Check">
<kw name="Run AAF Health Check" library="aaf_interface">
<doc>Runs AAF Health check</doc>
<msg timestamp="20180810 21:49:03.439" level="TRACE">Arguments: [  ]</msg>
<kw name="Run AAF Get Request" library="aaf_interface">
<doc>Runs AAF Get request</doc>
<arguments>
<arg>${AAF_HEALTH_CHECK_PATH}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20180810 21:49:03.441" level="TRACE">Arguments: [ ${data_path}='/authz/perms/user/demo@people.osaaf.org' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${GLOBAL_AAF_USERNAME}</arg>
<arg>${GLOBAL_AAF_PASSWORD}</arg>
</arguments>
<assign>
<var>${auth}</var>
</assign>
<msg timestamp="20180810 21:49:03.443" level="TRACE">Arguments: [ b'demo@people.osaaf.org' | b'demo123456!' ]</msg>
<msg timestamp="20180810 21:49:03.443" level="DEBUG">Test timeout 2 seconds active. 1.993 seconds left.</msg>
<msg timestamp="20180810 21:49:03.444" level="TRACE">Return: [b'demo@people.osaaf.org', b'demo123456!']</msg>
<msg timestamp="20180810 21:49:03.444" level="INFO">${auth} = ['demo@people.osaaf.org', 'demo123456!']</msg>
<status status="PASS" endtime="20180810 21:49:03.444" starttime="20180810 21:49:03.442"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>aaf</arg>
<arg>${GLOBAL_AAF_SERVER}</arg>
<arg>auth=${auth}</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20180810 21:49:03.445" level="TRACE">Arguments: [ 'aaf' | b'https://aaf.api.simpledemo.onap.org:8100' | auth=[b'demo@people.osaaf.org', b'demo123456!'] ]</msg>
<msg timestamp="20180810 21:49:03.445" level="DEBUG">Test timeout 2 seconds active. 1.991 seconds left.</msg>
<msg timestamp="20180810 21:49:03.446" level="INFO">Creating Session using : alias=aaf, url=https://aaf.api.simpledemo.onap.org:8100, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7fe781e45750&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20180810 21:49:03.446" level="DEBUG">Creating session: aaf</msg>
<msg timestamp="20180810 21:49:03.446" level="DEBUG">Argument types are:
&lt;type 'int'&gt;</msg>
<msg timestamp="20180810 21:49:03.446" level="TRACE">Return: &lt;requests.sessions.Session object at 0x7fe78388ca90&gt;</msg>
<msg timestamp="20180810 21:49:03.447" level="INFO">${session} = &lt;requests.sessions.Session object at 0x7fe78388ca90&gt;</msg>
<status status="PASS" endtime="20180810 21:49:03.447" starttime="20180810 21:49:03.445"></status>
</kw>
<kw name="Generate UUID" library="UUID">
<doc>generate a uuid</doc>
<assign>
<var>${uuid}</var>
</assign>
<msg timestamp="20180810 21:49:03.448" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20180810 21:49:03.448" level="DEBUG">Test timeout 2 seconds active. 1.989 seconds left.</msg>
<msg timestamp="20180810 21:49:03.448" level="TRACE">Return: UUID('d486e97d-46e0-44ef-b435-e4c9c4c0c034')</msg>
<msg timestamp="20180810 21:49:03.448" level="INFO">${uuid} = d486e97d-46e0-44ef-b435-e4c9c4c0c034</msg>
<status status="PASS" endtime="20180810 21:49:03.449" starttime="20180810 21:49:03.447"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<arg>X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}</arg>
<arg>X-FromAppId=${GLOBAL_APPLICATION_ID}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20180810 21:49:03.450" level="TRACE">Arguments: [ 'Accept=application/json' | 'Content-Type=application/json' | 'X-TransactionId=${GLOBAL_APPLICATION_ID}-${uuid}' | 'X-FromAppId=${GLOBAL_APPLICATION_ID}' ]</msg>
<msg timestamp="20180810 21:49:03.451" level="TRACE">Return: {'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-d486e97d-46e0-44ef-b435-e4c9c4c0c034'}</msg>
<msg timestamp="20180810 21:49:03.451" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/json', u'X-TransactionId': u'robot-ete-d486e97d-46e0-44ef-b435-e4c9c4c0c034', u'X-FromAppId': u'robot-ete'}</msg>
<status status="PASS" endtime="20180810 21:49:03.451" starttime="20180810 21:49:03.449"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>aaf</arg>
<arg>${data_path}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20180810 21:49:03.452" level="TRACE">Arguments: [ 'aaf' | '/authz/perms/user/demo@people.osaaf.org' | headers={'Accept': 'application/json', 'Content-Type': 'application/json', 'X-FromAppId': 'robot-ete', 'X-TransactionId': 'robot-ete-d486e97d-46e0-44ef-b435-e4c9c4c0c034'} ]</msg>
<msg timestamp="20180810 21:49:03.452" level="DEBUG">Test timeout 2 seconds active. 1.985 seconds left.</msg>
<msg timestamp="20180810 21:49:03.453" level="DEBUG">Starting new HTTPS connection (1): aaf.api.simpledemo.onap.org</msg>
<msg timestamp="20180810 21:49:08.472" level="FAIL">IOError: [Errno 32] Broken pipe</msg>
<msg timestamp="20180810 21:49:08.472" level="DEBUG">Traceback (most recent call last):
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/RequestsLibrary/RequestsKeywords.py", line 338, in get_request
    session, uri, params, headers, redir, timeout)
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/RequestsLibrary/RequestsKeywords.py", line 842, in _get_request
    cookies=self.cookies)
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/requests/sessions.py", line 521, in get
    return self.request('GET', url, **kwargs)
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/requests/sessions.py", line 508, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/requests/sessions.py", line 618, in send
    r = adapter.send(request, **kwargs)
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/requests/adapters.py", line 440, in send
    timeout=timeout
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/urllib3/connectionpool.py", line 601, in urlopen
    chunked=chunked)
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/urllib3/connectionpool.py", line 346, in _make_request
    self._validate_conn(conn)
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/urllib3/connectionpool.py", line 850, in _validate_conn
    conn.connect()
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/urllib3/connection.py", line 284, in connect
    conn = self._new_conn()
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/urllib3/connection.py", line 141, in _new_conn
    (self.host, self.port), self.timeout, **extra_kw)
  File "/home/argela/AplicationManagerGrpc/simple-grpc-client/src/main/resources/OpenECOMP_ETE/robot/library/urllib3/util/connection.py", line 60, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/usr/local/lib/python2.7/dist-packages/robot/running/signalhandler.py", line 42, in __call__
    sys.__stderr__.write('Second signal will force exit.\n')</msg>
<status status="FAIL" endtime="20180810 21:49:08.472" starttime="20180810 21:49:03.451"></status>
</kw>
<status status="FAIL" endtime="20180810 21:49:08.472" starttime="20180810 21:49:03.440"></status>
</kw>
<status status="FAIL" endtime="20180810 21:49:08.473" starttime="20180810 21:49:03.439"></status>
</kw>
<errors>
</errors>
</robot>
